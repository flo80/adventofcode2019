module AOC2019.Test.Day20
  ( day20tests
  )
where

import           Test.HUnit
import           AOC2019.Test.Common
import           AOC2019.Day20

day20tests = TestList [part1Test]--, part2Test]

part1Test :: Test
part1Test =
  TestLabel "Day 20 - Part 1 " $ TestList $ map (testExample day20a) examples1

part2Test :: Test
part2Test =
  TestLabel "Day 20 - Part 2 " $ TestList $ map (testExample day20b) examples2


examples1 :: [(String, Int)]
examples1 = 
  [("           A         \n           A         \n    #######.#########\n    #######.........#\n    #######.#######.#\n    #######.#######.#\n    #######.#######.#\n    #####  B    ###.#\n  BC...##  C    ###.#\n    ##.##       ###.#\n    ##...DE  F  ###.#\n    #####    G  ###.#\n    #########.#####.#\n  DE..#######...###.#\n    #.#########.###.#\n  FG..#########.....#\n    ###########.#####\n               Z     \n               Z     \n",23)
  ,  ("                   A               \n                   A               \n  #################.#############  \n  #.#...#...................#.#.#  \n  #.#.#.###.###.###.#########.#.#  \n  #.#.#.......#...#.....#.#.#...#  \n  #.#########.###.#####.#.#.###.#  \n  #.............#.#.....#.......#  \n  ###.###########.###.#####.#.#.#  \n  #.....#        A   C    #.#.#.#  \n  #######        S   P    #####.#  \n  #.#...#                 #......VT\n  #.#.#.#                 #.#####  \n  #...#.#               YN....#.#  \n  #.###.#                 #####.#  \nDI....#.#                 #.....#  \n  #####.#                 #.###.#  \nZZ......#               QG....#..AS\n  ###.###                 #######  \nJO..#.#.#                 #.....#  \n  #.#.#.#                 ###.#.#  \n  #...#..DI             BU....#..LF\n  #####.#                 #.#####  \nYN......#               VT..#....QG\n  #.###.#                 #.###.#  \n  #.#...#                 #.....#  \n  ###.###    J L     J    #.#.###  \n  #.....#    O F     P    #.#...#  \n  #.###.#####.#.#####.#####.###.#  \n  #...#.#.#...#.....#.....#.#...#  \n  #.#####.###.###.#.#.#########.#  \n  #...#.#.....#...#.#.#.#.....#.#  \n  #.###.#####.###.###.#.#.#######  \n  #.#.........#...#.............#  \n  #########.###.###.#############  \n           B   J   C               \n           U   P   P               \n",58)
  ]

examples2 :: [(String, Int)]
examples2 = undefined

